import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;

public class Solution {

    static String solve(int year){
        
       
        int dayToFind = 256;
        
       
        int [] daysInMonths = {31, 28, 31, 30, 31, 30, 31, 31, 30 , 31, 30, 31};

       
        if(year > 1918){
            
           
            if( (year % 400 == 0) || ( year % 4== 0 && year % 100 != 0   )) {
                daysInMonths[1] = 29;
            } 
            
        } else if(year <= 1917) { //Use Julian calendar instead
            
           
            if( year % 4 == 0) {
                daysInMonths[1] = 29;
            }
            
        } else {//is 1918, do special case for the switch in calendars from Julian to Gregorian
            //Feb started on day 14, meaning there were 29 - 14 = 15 days in this month for this year
            daysInMonths[1] = 15;
        }
        
     
        int runningTotal = 0;
        
        
        int currentMonth = 0;
        
       
        for(int i = 0; i < 13; i++) {
                
           //Add the running total with this current month
           runningTotal += daysInMonths[i];
           currentMonth += 1;
                                                                                
           //If we exceeded the day count, we know its in this month so break.
           if(runningTotal > dayToFind) {  
              break;
           }
        }
        
       
        int dayOfMonth = (daysInMonths[currentMonth] - (runningTotal - dayToFind)) - 1;  
        
        
        String day = (dayOfMonth < 10) ? "0"+dayOfMonth : ""+dayOfMonth;   
        String month = (currentMonth < 10) ? "0"+currentMonth : ""+currentMonth;
        return day +"." + month + "." + year;
            
    }

    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int year = in.nextInt();
        String result = solve(year);
        System.out.println(result);
    }
}
